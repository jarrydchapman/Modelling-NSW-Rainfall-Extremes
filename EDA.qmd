---
bibliography: references.bib
---

# Exploratory Data Analysis {#sec-eda}

```{r, include = FALSE, message = FALSE, warning = FALSE, echo = FALSE}
library(tidyverse)
library(extRemes)
library(gridExtra)
library(readr)
library(broom)
library(cowplot)
library(ggpubr)
```

```{r, include = FALSE, message = FALSE, warning = FALSE, echo = FALSE}
richmond <- read_csv("richmond.csv")
kurrajong <- read_csv("kurrajong.csv")
sydney <- read_csv("sydney.csv")
newcastle <- read_csv("newcastle.csv")
clean <- read_csv("cleanareasofinterestv2.csv")
lanina <- read_csv("lanina.csv")
enso <- read_csv("enso.csv")
set.seed(30567092)
```

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
## Nonzero Series
richmond.nonzero <- richmond %>%
    filter(mm > 0)
kurrajong.nonzero <- kurrajong %>%
    filter(mm > 0)
sydney.nonzero <- sydney %>%
    filter(mm > 0)
newcastle.nonzero <- newcastle %>%
    filter(mm > 0)
```

Exploratory data analysis is conducted at each station to gain an initial insight into rainfall and its drivers at each location. The following section focuses on the seasonality present in rainfall totals, extremes at each location and the relationship between large-scale atmospheric drivers and extreme events.

## Seasonality in NSW Rainfall

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
# Seasonality in Rainfall
richmond.nonzero.date <- richmond.nonzero %>%
  mutate(year = year(date),
         month = month(date, label = TRUE),
         day = day(date),
         doy = yday(date)) %>%
  select(date, year, month, day, doy, mm)

aggday.rich <- richmond.nonzero.date %>%
  group_by(day, month) %>%
  summarise(tot = sum(mm)) %>%
  ggplot(aes(x = day, y = tot)) +
  geom_bar(stat = "identity", colour = "white") +
  facet_wrap(~ month, ncol = 3) +
  xlab("Day of Month") +
  ylab("Total Rainfall (mm)") +
  theme_bw()


kurrajong.nonzero.date <- kurrajong.nonzero %>%
  mutate(year = year(date),
         month = month(date, label = TRUE),
         day = day(date),
         doy = yday(date)) %>%
  select(date, year, month, day, doy, mm)

aggday.kurr <- kurrajong.nonzero.date %>%
  group_by(month) %>%
  summarise(tot = sum(mm)) %>%
  ggplot(aes(x = month, y = tot)) +
  geom_bar(stat = "identity", colour = "white") +
  xlab("Month") +
  ylab("Total Rainfall (mm)") +
  theme_bw()


# Rainfall Quantiles
q50.rich <- richmond.nonzero.date %>%
  group_by(doy) %>%
  summarise(quantile(mm, 0.5))
q975.rich <- richmond.nonzero.date %>%
  group_by(doy) %>%
  summarise(quantile(mm, 0.975))
quantiles.rich <- cbind(q50.rich[,2], q975.rich[,2]) %>%
  as.data.frame() %>%
  as_tibble() %>%
  mutate(doy = 1:366) %>%
  relocate(doy)
quantiles.rich <- quantiles.rich %>%
  rename("q50" = "quantile(mm, 0.5)",
         "q975" = "quantile(mm, 0.975)")

qn50.rich <- quantiles.rich %>%
  ggplot() +
  geom_line(aes(doy, q50)) +
  theme_bw() +
  xlab("Day of Year") +
  ylab("50th Percentile (mm)")

qn975.rich <- quantiles.rich %>%
  ggplot() +
  geom_line(aes(doy, q975)) +
  theme_bw() +
  xlab("Day of Year") +
  ylab("97.5th Percentile (mm)")

q50.kurr <- kurrajong.nonzero.date %>%
  group_by(doy) %>%
  summarise(quantile(mm, 0.5))
q975.kurr <- kurrajong.nonzero.date %>%
  group_by(doy) %>%
  summarise(quantile(mm, 0.975))
quantiles.kurr <- cbind(q50.kurr[,2], q975.kurr[,2]) %>%
  as.data.frame() %>%
  as_tibble() %>%
  mutate(doy = 1:366) %>%
  relocate(doy)
quantiles.kurr <- quantiles.kurr %>%
  rename("q50" = "quantile(mm, 0.5)",
         "q975" = "quantile(mm, 0.975)")

qn50.kurr <- quantiles.kurr %>%
  ggplot() +
  geom_line(aes(doy, q50)) +
  theme_bw() +
  xlab("Day of Year") +
  ylab("50th Percentile (mm)")

qn975.kurr <- quantiles.kurr %>%
  ggplot() +
  geom_line(aes(doy, q975)) +
  theme_bw() +
  xlab("Day of Year") +
  ylab("97.5th Percentile (mm)")
```

Rainfall is a highly seasonal process, with the Australian eastern seaboard receiving the majority of its rainfall between October and March [@pepler2021]. Incorporating seasonality into the models for rainfall will better reflect the underlying processes driving extreme rainfall events in the region.

```{r, echo = FALSE, warning = FALSE, message = FALSE, fig.align = 'center'}
#| label: fig-seasonal
#| fig-cap: "Daily rainfall distributions for Hawkesbury River stations, showing daily rainfall at the 50th and 97.5th percentile."
ggarrange(qn50.kurr, qn975.kurr, ncol = 2)
```

The majority of rainfall in the Hawkesbury River region occurs over the late spring to early autumn months. When considering rain-only days, the median daily rainfall series exhibits the same seasonal pattern as the aggregated monthly rainfall distribution (@fig-seasonal). Median rainfall totals have a pronounced U-shape, with median rainfall at its highest in summer and lowest in winter. The seasonality present in the extremes (@fig-seasonal) maintains the summertime rainfall spike, however the seasonal pattern features a similar level from March to December. The rainfall percentile plots [@dupuis2014], indicate that the temporal dependence underlying the median rainfall process differs from that of the extremes.

## Threshold Levels and Declustering Extremes

As discussed in the methodology (@sec-extremeseries), this paper defines an extreme event as a day on which rainfall exceeds the 97.5th percentile of rainfall on rain-only days. At each of our locations, this threshold is approximately equivalent to a 99th percentile all-day threshold. All potential thresholds between the 90th and 99.5th percentile of rain-only days were explored, however a bias-variance trade-off between what is considered 'extreme' and data retention occurs as the threshold level is changed (@fig-biasvar). The bias-variance trade-off is a consequence of needing a sufficiently low threshold to retain data points, whilst maintaining a suitably high threshold that follows the limiting distribution for exceedances. @tbl-threshold shows the threshold levels of daily rainfall amounts at each station.

```{r, echo = FALSE, warning = FALSE, message = FALSE, include = FALSE}
colours <- c("95th Percentile" = "blue",
             "97.5th Percentile" = "green",
             "99th Percentile" = "red")

richmond2020 <- richmond %>%
  filter(year >= 2020)

biasvarrich <- richmond2020 %>%
  ggplot(aes(date, mm)) +
  geom_bar(stat = "identity", colour = "black") +
  geom_hline(aes(yintercept = quantile(richmond.nonzero$mm, 0.95), colour = "95th Percentile")) +
  geom_hline(aes(yintercept = quantile(richmond.nonzero$mm, 0.975), colour = "97.5th Percentile")) +
  geom_hline(aes(yintercept = quantile(richmond.nonzero$mm, 0.99), colour = "99th Percentile")) +
  scale_colour_manual(values = colours) +
  labs(x = "Date",
       y = "Rainfall (mm)",
       colour = "Threshold") +
  theme_bw()
```

```{r, echo = FALSE, warning = FALSE, message = FALSE, fig.align = 'center'}
#| label: fig-biasvar
#| fig-cap: "Daily rainfall (mm) at Richmond UWS Hawkesbury since 2020, showing the loss of data points as the threshold level increases."
biasvarrich
```

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
quantile(richmond.nonzero$mm, 0.95)
quantile(richmond.nonzero$mm, 0.975)
quantile(richmond.nonzero$mm, 0.99)

quantile(kurrajong.nonzero$mm, 0.95)
quantile(kurrajong.nonzero$mm, 0.975)
quantile(kurrajong.nonzero$mm, 0.99)

quantile(sydney.nonzero$mm, 0.95)
quantile(sydney.nonzero$mm, 0.975)
quantile(sydney.nonzero$mm, 0.99)

quantile(newcastle.nonzero$mm, 0.95) 
quantile(newcastle.nonzero$mm, 0.975)
quantile(newcastle.nonzero$mm, 0.99)
```

| Location  | 95th Percentile | 97.5th Percentile | 99th Percentile |
|-----------|-----------------|-------------------|-----------------|
| Richmond  | 28.72           | 41.91             | 61.40           |
| Kurrajong | 36.80           | 53.49             | 82.60           |
| Sydney    | 41.75           | 59.86             | 90.77           |
| Newcastle | 31.80           | 45.71             | 64.80           |

: Threshold levels and their associated rainfall amounts (mm) at each location. {#tbl-threshold}

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
# Triple La Nina Exceedances
richmond2020 <- richmond %>%
  filter(year >= 2020)

q95 <- quantile(richmond.nonzero$mm, 0.95)
q97.5 <- quantile(richmond.nonzero$mm, 0.975)
q99 <- quantile(richmond.nonzero$mm, 0.99)

ext <- cbind(q95, q97.5, q99) %>%
  as_tibble()

ext <- ext %>% 
  pivot_longer(cols = c(q95, q97.5, q99),
               names_to = "percentile",
               values_to = "mm")

thresh <- ggplot(data = richmond2020, aes(date, mm)) +
  geom_bar(stat = "identity") +
  geom_hline(aes(yintercept = mm, colour = percentile), 
             show.legend = TRUE, ext) +
  labs(x = "Date",
       y = "Rainfall (mm)",
       colour = "Percentile") +
  xlab("Date") +
  ylab("Rainfall (mm)") +
  theme_bw()

#Heatmap
richmond2022 <- richmond %>%
  filter(year == 2022) %>%
  select(-...1)

richmond2022 <- richmond2022 %>%
  mutate(month = month(date, label = TRUE),
         day = day(date),
         over95 = as.integer(richmond2022$over95),
         over95dc = as.integer(richmond2022$over95dc))

# Fix Cluster of 6
richmond2022[190,6] <- 0
richmond2022[191,6] <- 0
richmond2022[192,6] <- 0

richmond2022 <- richmond2022 %>%
  mutate(month = month(date, label = TRUE),
         day = day(date),
         over95 = as.factor(richmond2022$over95),
         over95dc = as.factor(richmond2022$over95dc))

exc <- ggplot(richmond2022, aes(month, day)) +
  geom_tile(aes(fill = over95), colour = "white", size = 0.1) +
  xlab("Month") +
  ylab("Day") +
  theme_bw() +
  labs(fill = "Extreme Event")

excdc <- ggplot(richmond2022, aes(month, day)) +
  geom_tile(aes(fill = over95dc), colour = "white", size = 0.1) +
  xlab("Month") +
  ylab("Day") +
  theme_bw() +
  labs(fill = "Extreme Event")
```

@fig-declustered illustrates the tendency of extreme rainfall events to cluster together in time, with 6 events occurring in March 2022 alone at Richmond UWS Hawkesbury. The effect of runs declustering is shown through the reduction of extremes (@fig-declustered), with the temporal dependence removed from consecutive-day same-system events [@lackmann2011]. In the declustered series, March has 4 events and July only has 1, with the event date attributed to the day with the highest rainfall total.

```{r, echo = FALSE, warning = FALSE, message = FALSE}
#| label: fig-declustered
#| fig-cap: "Extreme Events at Richmond UWS Hawkesbury in 2022, showing all extremes in Panel A and the impact of declustering in Panel B."
ggarrange(exc, excdc, ncol = 2, labels = c("A", "B"),
          common.legend = TRUE, legend = "bottom")
```

## Duration of Time Between Extremes

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
elapsed.fun <- function(data) {
data$elapsed975dc <- NA
ext975dc <- which(data$over97.5dc == 1)
data$elapsed975dc[ext975dc] <- diff(c(0,ext975dc))-1

time_bw <- data %>%
  select(c(date, elapsed975dc))

plot <- time_bw %>%
  filter(elapsed975dc < 100) %>%
  ggplot() +
  geom_histogram(aes(elapsed975dc), colour = "white", binwidth = 5) +
  theme_bw() +
  labs(x = "Days Between Extremes",
       y = "Count")

smy <- summary(time_bw$elapsed975dc)

time_bw <- time_bw %>%
  filter(!is.na(elapsed975dc))

sd <- sd(time_bw$elapsed975dc)

prop14 <- sum(time_bw$elapsed975dc <= 14) / nrow(time_bw)
prop30 <- sum(time_bw$elapsed975dc <= 30) / nrow(time_bw)
prop90 <- sum(time_bw$elapsed975dc <= 90) / nrow(time_bw)

result <- list(plot = plot, summary = smy, sd = sd, prop14 = prop14,
               prop30 = prop30, prop90 = prop90)
return(result)
}


elapsed.rich <- elapsed.fun(richmond)
elapsed.rich$plot
elapsed.kurr <- elapsed.fun(kurrajong)
durkurrplot <- elapsed.kurr$plot + labs(title = "Kurrajong")
elapsed.syd <- elapsed.fun(sydney)
durrsydplot <- elapsed.syd$plot + labs(title = "Sydney")
elapsed.new <- elapsed.fun(newcastle)
elapsed.new$plot
```

```{r, echo = FALSE, warning = FALSE, message = FALSE}
#| label: fig-duration
#| fig-cap: "Duration between the arrival times of extremes, showing that extremes at Kurrajong exhibit subseasonal clustering behaviour."
ggarrange(durkurrplot, durrsydplot, ncol = 2)
```

The duration of time between event arrivals is a useful tool for analysing the temporal clustering of extremes. The distribution of time elapsed between extremes at the Hawkesbury stations (@fig-duration) exhibits a positive skew, showing that extremes often occur in clusters. For coastal NSW, time elapsed between extremes is more uniformly distributed (@fig-duration). Visually, it appears that each location has event clustering within a 30 day period, as the modal bins for each histogram occur within 30 days of the initial extreme, resulting in two or more extremes within a 30-day period.

The summary statistics for arrival durations provide further insights into the clustering of extremes (@tbl-duration). Kurrajong Heights has the highest proportion of additional events within a 14-, 30-, and 90-day period of the last extreme arrival. Within a 30-day period, the two Hawkesbury stations have a greater proportion of consequent events than at Sydney or Newcastle. This suggests that there may be evidence for heightened temporal clustering of extremes within a 30-day period in the Hawkesbury River region than in other parts of NSW. Kurrajong also exhibits a notable difference to the other stations within a 14-day period, with 16.85% of extremes having an additional extreme occur within the timeframe, in contrast to the 13-14% at the other stations. Similar to the 30-day period, this provides evidence of subseasonal temporal clustering of extremes at Kurrajong Heights. However it is noted that means, standard deviations and maximums are likely impacted by data missingness issues.

| Location  | \% within 14 days | \% within 30 days | \% within 90 days | Mean   | Maximum | St. Dev. |
|-----------|-----------|-----------|-----------|-----------|-----------|-----------|
| Richmond  | 13.51%            | 25.41%            | 49.73%            | 142.70 | 1036.00 | 155.19   |
| Kurrajong | 16.85%            | 29.35%            | 57.61%            | 142.92 | 994.00  | 176.66   |
| Sydney    | 12.57%            | 19.89%            | 49.21%            | 138.20 | 852.00  | 137.64   |
| Newcastle | 13.80%            | 23.04%            | 54.34%            | 121.10 | 919.00  | 126.80   |

: Summary statistics for the amount of time elapsed between events (in days) for each station. {#tbl-duration}

## Permutation Testing for the Relationship Between Climate Drivers and Extreme Rainfall

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
# 30 Day Window
interval.rich.30 <- richmond %>%
  filter(date >= "1950-01-24")
window30 <- nrow(interval.rich.30) / 30
interval.rich.30.cut <- cut(interval.rich.30$date, breaks = window30 , 
                            labels = FALSE)
interval.rich.30 <- cbind(interval.rich.30, interval.rich.30.cut)
richmond.count.30 <- interval.rich.30 %>%
  select(mm, mm30, over95, over97.5, over95dc, over97.5dc, interval.rich.30.cut)
richmond.count.30 <- richmond.count.30 %>%
  aggregate(by = list(richmond.count.30$interval.rich.30.cut),
            FUN = sum)

richmond.count.30 <- richmond.count.30 %>%
  select(-interval.rich.30.cut) %>%
  rename("interval" = "Group.1") %>%
  mutate(date = as.Date(seq(1, length(interval.rich.30$date), 30), origin = "1950-01-24"))
richmond.count.30 <- richmond.count.30 %>%
  relocate(date, interval)

enso.30 <- richmond %>%
  filter(date >= "1950-01-24")

enso.30 <- enso.30$enso[seq(1, nrow(enso.30), 30)]

richmond.count.30 <- richmond.count.30 %>%
  mutate(enso = enso.30)


# 90 Day Window
interval.rich.90 <- richmond %>%
  filter(date >= "1950-02-23")
window90 <- nrow(interval.rich.90) / 90
interval.rich.90.cut <- cut(interval.rich.90$date, breaks = window90 , 
                            labels = FALSE)
interval.rich.90 <- cbind(interval.rich.90, interval.rich.90.cut)
richmond.count.90 <- interval.rich.90 %>%
  select(mm, mm30, over95, over97.5, over95dc, over97.5dc, interval.rich.90.cut)
richmond.count.90 <- richmond.count.90 %>%
  aggregate(by = list(richmond.count.90$interval.rich.90.cut),
            FUN = sum)

richmond.count.90 <- richmond.count.90 %>%
  select(-interval.rich.90.cut) %>%
  rename("interval" = "Group.1") %>%
  mutate(date = as.Date(seq(1, length(interval.rich.90$date), 90), origin = "1950-02-23"))
richmond.count.90 <- richmond.count.90 %>%
  relocate(date, interval)

enso.90 <- richmond %>%
  filter(date >= "1950-02-23")

enso.90 <- enso.90$enso[seq(1, nrow(enso.90), 90)]

richmond.count.90 <- richmond.count.90 %>%
  mutate(enso = enso.90)


# 30 Day Window
interval.kurr.30 <- kurrajong %>%
  filter(date >= "1950-01-24")
window30 <- nrow(interval.kurr.30) / 30
interval.kurr.30.cut <- cut(interval.kurr.30$date, breaks = window30 , 
                            labels = FALSE)
interval.kurr.30 <- cbind(interval.kurr.30, interval.kurr.30.cut)
kurrajong.count.30 <- interval.kurr.30 %>%
  select(mm, mm30, over95, over97.5, over95dc, over97.5dc, interval.kurr.30.cut)
kurrajong.count.30 <- kurrajong.count.30 %>%
  aggregate(by = list(kurrajong.count.30$interval.kurr.30.cut),
            FUN = sum)

kurrajong.count.30 <- kurrajong.count.30 %>%
  select(-interval.kurr.30.cut) %>%
  rename("interval" = "Group.1") %>%
  mutate(date = as.Date(seq(1, length(interval.kurr.30$date), 30), origin = "1950-01-24"))
kurrajong.count.30 <- kurrajong.count.30 %>%
  relocate(date, interval)

kurrajong.count.30 <- kurrajong.count.30 %>%
  mutate(enso = enso.30)


# 90 Day Window
interval.kurr.90 <- kurrajong %>%
  filter(date >= "1950-02-23")
window90 <- nrow(interval.kurr.90) / 90
interval.kurr.90.cut <- cut(interval.kurr.90$date, breaks = window90 , 
                            labels = FALSE)
interval.kurr.90 <- cbind(interval.kurr.90, interval.kurr.90.cut)
kurrajong.count.90 <- interval.kurr.90 %>%
  select(mm, mm30, over95, over97.5, over95dc, over97.5dc, interval.kurr.90.cut)
kurrajong.count.90 <- kurrajong.count.90 %>%
  aggregate(by = list(kurrajong.count.90$interval.kurr.90.cut),
            FUN = sum)

kurrajong.count.90 <- kurrajong.count.90 %>%
  select(-interval.kurr.90.cut) %>%
  rename("interval" = "Group.1") %>%
  mutate(date = as.Date(seq(1, length(interval.kurr.90$date), 90), origin = "1950-02-23"))
kurrajong.count.90 <- kurrajong.count.90 %>%
  relocate(date, interval)

kurrajong.count.90 <- kurrajong.count.90 %>%
  mutate(enso = enso.90)
```

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
colours <- c("El Nino" = "red",
             "Neutral" = "green",
             "La Nina" = "blue")

win30plot.rich <- richmond.count.30 %>%
  ggplot() +
  geom_density(aes(over97.5dc, colour = enso)) +
  scale_colour_manual(values = colours) +
  theme_bw() +
  labs(x = "Count of Extremes",
       y = "Density",
       colour = "ENSO Phase")

win30plot.kurr <- kurrajong.count.30 %>%
  ggplot() +
  geom_density(aes(over97.5dc, colour = enso)) +
  scale_colour_manual(values = colours) +
  theme_bw() +
  labs(x = "Count of Extremes",
       y = "Density",
       colour = "ENSO Phase")

win90plot.rich <- richmond.count.90 %>%
  ggplot() +
  geom_density(aes(over97.5dc, colour = enso)) +
  scale_colour_manual(values = colours) +
  theme_bw() +
  labs(x = "Count of Extremes",
       y = "Density",
       colour = "ENSO Phase")


win90plot.kurr <- kurrajong.count.90 %>%
  ggplot() +
  geom_density(aes(over97.5dc, colour = enso)) +
  scale_colour_manual(values = colours) +
  theme_bw() +
  labs(x = "Count of Extremes",
       y = "Density",
       colour = "ENSO Phase")

win30plot.rich + labs(title = "Richmond 30 Days")
win30plot.kurr + labs(title = "Kurrajong 30 Days")
win90plot.rich + labs(title = "Richmond 90 Days")
win90plot.kurr + labs(title = "Kurrajong 90 Days")
```

```{r, echo = FALSE, warning = FALSE, message = FALSE}
#| label: fig-ensoext
#| fig-cap: "Impact of ENSO phase on the temporal clustering of extremes, showing that the density of multiple extremes is greater during La Ni&#241;a periods."
ggarrange(win30plot.rich + labs(title = "Richmond 30 Day Intervals"),
          win30plot.kurr + labs(title = "Kurrajong 30 Day Intervals"),
          win90plot.rich + labs(title = "Richmond 90 Day Intervals"),
          win90plot.kurr + labs(title = "Kurrajong 90 Day Intervals"),
          nrow = 2, ncol = 2,
          common.legend = TRUE,
          legend = "bottom")
```

The phase of ENSO appears to have an impact on the occurrence of extremes in the Hawkesbury (@fig-ensoext), with La Niña periods driving an increase in extreme arrivals. The relationship between La Niña and extreme occurrences becomes more apparent when considering 90-day periods, as the incidence of 3-4 extreme periods is significantly higher under La Niña conditions than either alternative ENSO phase in the Hawkesbury. The distributional shapes for each phase at 30- and 90-days suggest that periods with an extreme are more likely to occur during a La Niña phase, indicated by the lower densities at zero for each of the four series. To more formally assess the relationship between extremes, ENSO and other large-scale climate drivers, permutation testing is used.

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
# perm.prep <- function(data) {
#   data %>%
#     mutate(lanina = ifelse(soi >= 7, 1, 0),
#            neg.iod = ifelse(dmi <= -0.4, 1, 0),
#            pos.sam = ifelse(sam > 0, 1, 0))
# }
# 
# 
# richmond <- perm.prep(richmond)
# kurrajong <- perm.prep(kurrajong)
# sydney <- perm.prep(sydney)
# newcastle <- perm.prep(newcastle)
# 
# perm.enso <- function(data) {
#   perm.enso <- tibble(enso = c(rep('lanina', sum(data$lanina)),
#                                rep('other', nrow(data) - sum(data$lanina))),
#                       extreme = c(rep('yes', sum(ifelse(data$lanina == 1 & data$over97.5dc == 1, 1, 0))),
#                                   rep('no', sum(ifelse(data$lanina == 1 & data$over97.5dc == 0, 1, 0))),
#                                   rep('yes', sum(ifelse(data$lanina == 0 & data$over97.5dc == 1, 1, 0))),
#                                   rep('no', sum(ifelse(data$lanina == 0 & data$over97.5dc == 0, 1, 0)))))
# }
# 
# perm.enso.rich <- perm.enso(richmond)
# perm.enso.kurr <- perm.enso(kurrajong)
# perm.enso.syd <- perm.enso(sydney)
# perm.enso.new <- perm.enso(newcastle)
# 
# 
# perm.iod <- function(data) {
#   perm.iod <- tibble(iod = c(rep('negative', sum(data$neg.iod)),
#                              rep('other', nrow(data) - sum(data$neg.iod))),
#                      extreme = c(rep('yes', sum(ifelse(data$neg.iod == 1 & data$over97.5dc == 1, 1, 0))),
#                                  rep('no', sum(ifelse(data$neg.iod == 1 & data$over97.5dc == 0, 1, 0))),
#                                  rep('yes', sum(ifelse(data$neg.iod == 0 & data$over97.5dc == 1, 1, 0))),
#                                  rep('no', sum(ifelse(data$neg.iod == 0 & data$over97.5dc == 0, 1, 0)))))
# }
# 
# perm.iod.rich <- perm.iod(richmond)
# perm.iod.kurr <- perm.iod(kurrajong)
# perm.iod.syd <- perm.iod(sydney)
# perm.iod.new <- perm.iod(newcastle)
# 
# # SAM
# rich57 <- richmond %>%
#   filter(date >= "1957-01-01")
# kurr57 <- kurrajong %>%
#   filter(date >= "1957-01-01")
# syd57 <- sydney %>%
#   filter(date >= "1957-01-01")
# new57 <- newcastle %>%
#   filter(date >= "1957-01-01")
# 
# perm.sam <- function(data) {
#   perm.sam <- tibble(sam = c(rep('positive', sum(data$pos.sam)),
#                              rep('other', nrow(data) - sum(data$pos.sam))),
#                      extreme = c(rep('yes', sum(ifelse(data$pos.sam == 1 & data$over97.5dc == 1, 1, 0))),
#                                  rep('no', sum(ifelse(data$pos.sam == 1 & data$over97.5dc == 0, 1, 0))),
#                                  rep('yes', sum(ifelse(data$pos.sam == 0 & data$over97.5dc == 1, 1, 0))),
#                                  rep('no', sum(ifelse(data$pos.sam == 0 & data$over97.5dc == 0, 1, 0)))))
# }
# 
# perm.sam.rich <- perm.sam(rich57)
# perm.sam.kurr <- perm.sam(kurr57)
# perm.sam.syd <- perm.sam(syd57)
# perm.sam.new <- perm.sam(new57)
```

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
# enso <- function(data) {
# #ENSO
# perm.df <- data %>%
#   group_by(enso, extreme) %>%
#   tally() %>%
#   ungroup() %>%
#   pivot_wider(names_from = extreme, values_from = n) %>%
#   mutate(total = yes + no) %>%
#   mutate(prop = round(yes / total, digits = 4)) %>%
#   select(enso, yes, no, total, prop)
# 
# xobs <- perm.df$prop[perm.df$enso == 'lanina'] - perm.df$prop[perm.df$enso =='other']
# 
# # Permutation
# n <- nrow(data)
# R <- 500
# rxobs <- array(dim = R)
# set.seed(30567092)
# rperm <- data
# 
# 
# for (r in 1:R) {
#   rperm <- rperm %>%
#     mutate(enso = sample(rperm$enso, n, replace = FALSE))
# 
#   rperm.df <- rperm %>%
#     group_by(enso, extreme) %>%
#     tally() %>%
#     ungroup() %>%
#     pivot_wider(names_from = extreme, values_from = n) %>%
#     mutate(total = yes + no) %>%
#     mutate(prop = round(yes / total, digits = 4))
# 
#   rxobs[r] <- rperm.df$prop[perm.df$enso == 'lanina'] - rperm.df$prop[rperm.df$enso == 'other']
# }
# 
# pval <- sum(rxobs >= xobs) / R
# options(digits = 4)
# pval
# 
# 
# rxobs.df <- as_tibble(rxobs) %>%
#   mutate(r = 1:R)
# 
# plot <- rxobs.df %>%
#   ggplot(aes(value)) +
#   geom_histogram(colour = "blue", fill = "blue", alpha=0.5, bins = R)  +
#   labs(x = "Permuted Proportions",
#        y = "Count") +
#   geom_vline(xintercept = xobs, colour = "red") +
#   theme_bw()
# 
# result <- list(pval = pval, plot = plot)
# return(result)
# }
# 
# enso.rich <- enso(perm.enso.rich)
# print(enso.rich$plot)
# print(enso.rich$pval)
# enso.kurr <- enso(perm.enso.kurr)
# print(enso.kurr$plot)
# print(enso.kurr$pval)
# enso.syd <- enso(perm.enso.syd)
# print(enso.syd$plot)
# print(enso.syd$pval)
# enso.new <- enso(perm.enso.new)
# print(enso.new$plot)
# print(enso.new$pval)
```

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
# iod <- function(data) {
#   #IOD
#   perm.df <- data %>%
#     group_by(iod, extreme) %>%
#     tally() %>%
#     ungroup() %>%
#     pivot_wider(names_from = extreme, values_from = n) %>%
#     mutate(total = yes + no) %>%
#     mutate(prop = round(yes / total, digits = 4)) %>%
#     select(iod, yes, no, total, prop)
# 
#   xobs <- perm.df$prop[perm.df$iod == 'negative'] - perm.df$prop[perm.df$iod =='other']
# 
#   # Permutation
#   n <- nrow(data)
#   R <- 500
#   rxobs <- array(dim = R)
#   set.seed(30567092)
#   rperm <- data
# 
# 
#   for (r in 1:R) {
#     rperm <- rperm %>%
#       mutate(iod = sample(rperm$iod, n, replace = FALSE))
# 
#     rperm.df <- rperm %>%
#       group_by(iod, extreme) %>%
#       tally() %>%
#       ungroup() %>%
#       pivot_wider(names_from = extreme, values_from = n) %>%
#       mutate(total = yes + no) %>%
#       mutate(prop = round(yes / total, digits = 4))
# 
#     rxobs[r] <- rperm.df$prop[perm.df$iod == 'negative'] - rperm.df$prop[rperm.df$iod == 'other']
#   }
# 
#   pval <- sum(rxobs >= xobs) / R
#   options(digits = 4)
#   pval
# 
# 
#   rxobs.df <- as_tibble(rxobs) %>%
#     mutate(r = 1:R)
# 
#   plot <- rxobs.df %>%
#     ggplot(aes(value)) +
#     geom_histogram(colour = "blue", fill = "blue", alpha=0.5, bins = R)  +
#     labs(x = "Permuted Proportions",
#        y = "Count") +
#     geom_vline(xintercept = xobs, colour = "red") +
#     theme_bw()
# 
#   result <- list(pval = pval, plot = plot)
#   return(result)
# }
# 
# iod.rich <- iod(perm.iod.rich)
# print(iod.rich$plot)
# print(iod.rich$pval)
# iod.kurr <- iod(perm.iod.kurr)
# print(iod.kurr$plot)
# print(iod.kurr$pval)
# iod.syd <- iod(perm.iod.syd)
# print(iod.syd$plot)
# print(iod.syd$pval)
# iod.new <- iod(perm.iod.new)
# print(iod.new$plot)
# print(iod.new$pval)
```

```{r, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
# sam <- function(data) {
#   #SAM
#   perm.df <- data %>%
#     group_by(sam, extreme) %>%
#     tally() %>%
#     ungroup() %>%
#     pivot_wider(names_from = extreme, values_from = n) %>%
#     mutate(total = yes + no) %>%
#     mutate(prop = round(yes / total, digits = 4)) %>%
#     select(sam, yes, no, total, prop)
# 
#   xobs <- perm.df$prop[perm.df$sam == 'positive'] - perm.df$prop[perm.df$sam =='other']
# 
#   # Permutation
#   n <- nrow(data)
#   R <- 500
#   rxobs <- array(dim = R)
#   set.seed(30567092)
#   rperm <- data
# 
# 
#   for (r in 1:R) {
#     rperm <- rperm %>%
#       mutate(sam = sample(rperm$sam, n, replace = FALSE))
# 
#     rperm.df <- rperm %>%
#       group_by(sam, extreme) %>%
#       tally() %>%
#       ungroup() %>%
#       pivot_wider(names_from = extreme, values_from = n) %>%
#       mutate(total = yes + no) %>%
#       mutate(prop = round(yes / total, digits = 4))
# 
#     rxobs[r] <- rperm.df$prop[perm.df$sam == 'positive'] - rperm.df$prop[rperm.df$sam == 'other']
#   }
# 
#   pval <- sum(rxobs >= xobs) / R
#   options(digits = 4)
#   pval
# 
# 
#   rxobs.df <- as_tibble(rxobs) %>%
#     mutate(r = 1:R)
# 
#   plot <- rxobs.df %>%
#     ggplot(aes(value)) +
#     geom_histogram(colour = "blue", fill = "blue", alpha=0.5, bins = R)  +
#     labs(x = "Permuted Proportions",
#        y = "Count") +
#     geom_vline(xintercept = xobs, colour = "red") +
#     theme_bw()
# 
#   result <- list(pval = pval, plot = plot)
#   return(result)
# }
# 
# sam.rich <- sam(perm.sam.rich)
# print(sam.rich$plot)
# print(sam.rich$pval)
# sam.kurr <- sam(perm.sam.kurr)
# print(sam.kurr$plot)
# print(sam.kurr$pval)
# sam.syd <- sam(perm.sam.syd)
# print(sam.syd$plot)
# print(sam.syd$pval)
# sam.new <- sam(perm.sam.new)
# print(sam.new$plot)
# print(sam.new$pval)
```

```{r, , include = FALSE, echo = FALSE, warning = FALSE, message = FALSE}
# #| label: fig-perm
# #| fig-cap: "Permutation Testing for large-scale atmospheric drivers"
# #| fig-subcap:
# #| - "ENSO at Richmond UWS Hawkesbury"
# #| - "ENSO at Kurrajong Heights"
# #| - "ENSO at Sydney Botanic Gardens"
# #| - "ENSO at Newcastle Nobbys Signal Station"
# #| - "IOD at Richmond UWS Hawkesbury"
# #| - "IOD at Kurrajong Heights"
# #| - "IOD at Sydney Botanic Gardens"
# #| - "IOD at Newcastle Nobbys Signal Station"
# #| - "SAM at Richmond UWS Hawkesbury"
# #| - "SAM at Kurrajong Heights"
# #| - "SAM at Sydney Botanic Gardens"
# #| - "SAM at Newcastle Nobbys Signal Station"
# #| layout-nrow: 3
# #| layout-ncol: 4
# 
# enso.rich$plot
# enso.kurr$plot
# enso.syd$plot
# enso.new$plot
# iod.rich$plot
# iod.kurr$plot
# iod.syd$plot
# iod.new$plot
# sam.rich$plot
# sam.kurr$plot
# sam.syd$plot
# sam.new$plot

#labels #draw_text
#patchwork
#freeze = TRUE
#source
#save as object & call object
#glm into tables --- gtsummary

```

![Permutation testing results for large-scale atmospheric drivers at each station, showing the impact of ENSO on extremes.](images%5Cperm.png){#fig-perm width="600" height="300"}

| Location                        | ENSO  | IOD   | SAM   |
|---------------------------------|-------|-------|-------|
| Richmond UWS Hawkesbury         | 0.006 | 0.672 | 0.226 |
| Kurrajong Heights               | 0.000 | 0.858 | 0.404 |
| Sydney Botanic Gardens          | 0.018 | 0.616 | 0.268 |
| Newcastle Nobbys Signal Station | 0.080 | 0.282 | 0.234 |

: Empirical p-values for permutation testing performed on each large-scale climate driver at each station. {#tbl-permp}

There is evidence that the observed difference in proportion of La Niña days with extreme rainfall relative to the proportion of Neutral and El Niño days with extreme rainfall is not by chance at both Richmond and Kurrajong at the 1% level, and Sydney at the 5% level (@fig-perm). This supports climatological understanding of La Niña phases being wetter. The significance of results at the Hawkesbury stations indicate that the region may be more susceptible to rainfall extremes during La Niña periods than other locations in NSW.

Both negative IOD and positive SAM phases fail to produce observed differences in sample proportions of extreme occurrence relative to their counterfactual that are statistically significant @tbl-permp. These results indicate that IOD and SAM are not key drivers of extreme rainfall events in this region, however the teleconnections between climate drivers should be considered and their ability to magnify the impact of other climate drivers.
